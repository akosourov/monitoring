// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type RequestURL struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestURL) Reset()         { *m = RequestURL{} }
func (m *RequestURL) String() string { return proto.CompactTextString(m) }
func (*RequestURL) ProtoMessage()    {}
func (*RequestURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *RequestURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestURL.Unmarshal(m, b)
}
func (m *RequestURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestURL.Marshal(b, m, deterministic)
}
func (m *RequestURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestURL.Merge(m, src)
}
func (m *RequestURL) XXX_Size() int {
	return xxx_messageInfo_RequestURL.Size(m)
}
func (m *RequestURL) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestURL.DiscardUnknown(m)
}

var xxx_messageInfo_RequestURL proto.InternalMessageInfo

func (m *RequestURL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ResponseInfo struct {
	IsAvailable          bool     `protobuf:"varint,1,opt,name=isAvailable,proto3" json:"isAvailable,omitempty"`
	AvgLatency           int64    `protobuf:"varint,2,opt,name=avgLatency,proto3" json:"avgLatency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseInfo) Reset()         { *m = ResponseInfo{} }
func (m *ResponseInfo) String() string { return proto.CompactTextString(m) }
func (*ResponseInfo) ProtoMessage()    {}
func (*ResponseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{2}
}

func (m *ResponseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseInfo.Unmarshal(m, b)
}
func (m *ResponseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseInfo.Marshal(b, m, deterministic)
}
func (m *ResponseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseInfo.Merge(m, src)
}
func (m *ResponseInfo) XXX_Size() int {
	return xxx_messageInfo_ResponseInfo.Size(m)
}
func (m *ResponseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseInfo proto.InternalMessageInfo

func (m *ResponseInfo) GetIsAvailable() bool {
	if m != nil {
		return m.IsAvailable
	}
	return false
}

func (m *ResponseInfo) GetAvgLatency() int64 {
	if m != nil {
		return m.AvgLatency
	}
	return 0
}

type ResponseLatency struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AvgLatency           int64    `protobuf:"varint,2,opt,name=avgLatency,proto3" json:"avgLatency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseLatency) Reset()         { *m = ResponseLatency{} }
func (m *ResponseLatency) String() string { return proto.CompactTextString(m) }
func (*ResponseLatency) ProtoMessage()    {}
func (*ResponseLatency) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{3}
}

func (m *ResponseLatency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseLatency.Unmarshal(m, b)
}
func (m *ResponseLatency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseLatency.Marshal(b, m, deterministic)
}
func (m *ResponseLatency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseLatency.Merge(m, src)
}
func (m *ResponseLatency) XXX_Size() int {
	return xxx_messageInfo_ResponseLatency.Size(m)
}
func (m *ResponseLatency) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseLatency.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseLatency proto.InternalMessageInfo

func (m *ResponseLatency) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ResponseLatency) GetAvgLatency() int64 {
	if m != nil {
		return m.AvgLatency
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*RequestURL)(nil), "RequestURL")
	proto.RegisterType((*ResponseInfo)(nil), "ResponseInfo")
	proto.RegisterType((*ResponseLatency)(nil), "ResponseLatency")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2f, 0x2a, 0x48,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54,
	0x92, 0xe3, 0xe2, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x09, 0x0d, 0xf2, 0x11, 0x12, 0xe0,
	0x62, 0x2e, 0x2d, 0xca, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0x02, 0xb8,
	0x78, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x3d, 0xf3, 0xd2, 0xf2, 0x85, 0x14, 0xb8,
	0xb8, 0x33, 0x8b, 0x1d, 0xcb, 0x12, 0x33, 0x73, 0x12, 0x93, 0x72, 0x52, 0xc1, 0x2a, 0x39, 0x82,
	0x90, 0x85, 0x84, 0xe4, 0xb8, 0xb8, 0x12, 0xcb, 0xd2, 0x7d, 0x12, 0x4b, 0x52, 0xf3, 0x92, 0x2b,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0x90, 0x44, 0x94, 0x9c, 0xb9, 0xf8, 0x61, 0x26, 0x42,
	0x85, 0x30, 0xad, 0x25, 0x64, 0x88, 0x51, 0x1f, 0x23, 0x17, 0x97, 0x6f, 0x7e, 0x5e, 0x66, 0x49,
	0x7e, 0x51, 0x66, 0x5e, 0xba, 0x90, 0x16, 0x17, 0x97, 0x7b, 0x2a, 0xc8, 0x07, 0x60, 0x37, 0x72,
	0xeb, 0x21, 0xbc, 0x24, 0xc5, 0xab, 0x87, 0xec, 0x7e, 0x25, 0x06, 0x21, 0x4d, 0x2e, 0x5e, 0xf7,
	0xd4, 0x12, 0xdf, 0xc4, 0x0a, 0x98, 0xed, 0x6c, 0x7a, 0xe0, 0xa0, 0x90, 0x12, 0xd0, 0x43, 0x77,
	0x17, 0x54, 0x69, 0x66, 0x1e, 0x41, 0xa5, 0x49, 0x6c, 0xe0, 0x70, 0x35, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x1c, 0xfb, 0xf4, 0x47, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitoringClient is the client API for Monitoring service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringClient interface {
	GetURLInfo(ctx context.Context, in *RequestURL, opts ...grpc.CallOption) (*ResponseInfo, error)
	GetMaxLatency(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResponseLatency, error)
	GetMinLatency(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResponseLatency, error)
}

type monitoringClient struct {
	cc *grpc.ClientConn
}

func NewMonitoringClient(cc *grpc.ClientConn) MonitoringClient {
	return &monitoringClient{cc}
}

func (c *monitoringClient) GetURLInfo(ctx context.Context, in *RequestURL, opts ...grpc.CallOption) (*ResponseInfo, error) {
	out := new(ResponseInfo)
	err := c.cc.Invoke(ctx, "/Monitoring/GetURLInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitoringClient) GetMaxLatency(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResponseLatency, error) {
	out := new(ResponseLatency)
	err := c.cc.Invoke(ctx, "/Monitoring/GetMaxLatency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitoringClient) GetMinLatency(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ResponseLatency, error) {
	out := new(ResponseLatency)
	err := c.cc.Invoke(ctx, "/Monitoring/GetMinLatency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitoringServer is the server API for Monitoring service.
type MonitoringServer interface {
	GetURLInfo(context.Context, *RequestURL) (*ResponseInfo, error)
	GetMaxLatency(context.Context, *Empty) (*ResponseLatency, error)
	GetMinLatency(context.Context, *Empty) (*ResponseLatency, error)
}

func RegisterMonitoringServer(s *grpc.Server, srv MonitoringServer) {
	s.RegisterService(&_Monitoring_serviceDesc, srv)
}

func _Monitoring_GetURLInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServer).GetURLInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Monitoring/GetURLInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServer).GetURLInfo(ctx, req.(*RequestURL))
	}
	return interceptor(ctx, in, info, handler)
}

func _Monitoring_GetMaxLatency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServer).GetMaxLatency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Monitoring/GetMaxLatency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServer).GetMaxLatency(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Monitoring_GetMinLatency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServer).GetMinLatency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Monitoring/GetMinLatency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServer).GetMinLatency(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Monitoring_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Monitoring",
	HandlerType: (*MonitoringServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetURLInfo",
			Handler:    _Monitoring_GetURLInfo_Handler,
		},
		{
			MethodName: "GetMaxLatency",
			Handler:    _Monitoring_GetMaxLatency_Handler,
		},
		{
			MethodName: "GetMinLatency",
			Handler:    _Monitoring_GetMinLatency_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
